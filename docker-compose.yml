--- 
services: 
  deluge: 
    container_name: deluge
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Caracas
    image: linuxserver/deluge
    labels: 
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
    ports: 
      - "8112:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"
    restart: unless-stopped
    volumes: 
      - "${DLDIR}:/downloads"
      - "./deluge:/config"
      - "/etc/localtime:/etc/localtime:ro"
  heimdall: 
    container_name: heimdall
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - TZ=America/Caracas
    image: linuxserver/heimdall
    labels: 
      - "traefik.http.routers.heimdall.rule=Host(`${DOMAIN}`,`${IP}`)"
    ports: 
      - "8888:80"
    restart: unless-stopped
    volumes: 
      - "./heimdall:/config"
  jackett: 
    container_name: jackett
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    image: linuxserver/jackett
    labels: 
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
    ports: 
      - "9117:9117"
    restart: unless-stopped
    volumes: 
      - "./jackett:/config"
      - "${DLDIR}/completed:/downloads"
      - "/etc/localtime:/etc/localtime:ro"
  jellyfin: 
    container_name: jellyfin
    image: jellyfin/jellyfin
    labels: 
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)"
    ports: 
      - "8096:8096"
    restart: unless-stopped
    user: "1000:1000"
    volumes: 
      - "./jellyfin/config:/config"
      - "./jellyfin/cache:/cache"
      - "${TVDIR}:/media/tv"
      - "${MOVIESDIR}:/media/movies"
      - "/etc/localtime:/etc/localtime:ro"
  ombi: 
    container_name: ombi
    depends_on: 
      - radarr
      - sonarr
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
    image: linuxserver/ombi
    labels: 
      - "traefik.http.routers.ombi.rule=Host(`ombi.${DOMAIN}`)"
    ports: 
      - "3579:3579"
    restart: unless-stopped
    volumes: 
      - "./ombi:/config"
      - "/etc/localtime:/etc/localtime:ro"
  radarr: 
    container_name: radarr
    depends_on: 
      - jackett
      - deluge
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
    image: linuxserver/radarr
    labels: 
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
    ports: 
      - "7878:7878"
    restart: unless-stopped
    volumes: 
      - "./radarr:/config"
      - "${DLDIR}/completed:/downloads/completed"
      - "${MOVIESDIR}:/movies"
      - "/etc/localtime:/etc/localtime:ro"
  sonarr: 
    container_name: sonarr
    depends_on: 
      - jackett
      - deluge
    environment: 
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
    image: "linuxserver/sonarr:preview"
    labels: 
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
    ports: 
      - "8989:8989"
    restart: unless-stopped
    volumes: 
      - "./sonarr:/config"
      - "${DLDIR}/completed:/downloads/completed"
      - "${TVDIR}:/tv"
      - "/etc/localtime:/etc/localtime:ro"
#  traefik: 
#    command: "--api --providers.docker"
#    container_name: traefik
#    image: "traefik:v2.0"
#    ports: 
#      - "80:80"
#      - "9090:8080"
#    volumes: 
#      - "/var/run/docker.sock:/var/run/docker.sock"
version: "3"
